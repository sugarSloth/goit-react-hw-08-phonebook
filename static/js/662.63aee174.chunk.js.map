{"version":3,"file":"static/js/662.63aee174.chunk.js","mappings":"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","sources":["components/Form.jsx","components/FormInput.jsx","redux/contacts/selectors.js","components/ContactForm.jsx","components/ContactListItem.jsx","components/Loader.jsx","components/ContactList.jsx","components/Filter.jsx","components/ContactModal.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Button, FormControl } from '@chakra-ui/react';\n\nconst Form = ({ children, handleSubmit, buttonText }) => (\n  <FormControl as=\"form\" onSubmit={handleSubmit} textAlign=\"center\" mb=\"16px\">\n    {children}\n    <Button type=\"submit\" mt=\"12px\">\n      {buttonText}\n    </Button>\n  </FormControl>\n);\n\nexport default Form;\n","import { Container, FormLabel, Input } from '@chakra-ui/react';\nimport React from 'react';\n\nconst FormInput = ({ type, name, label, pattern, title, value, styles }) => (\n  <Container textAlign=\"start\">\n    <FormLabel htmlFor={name} sx={styles} display=\"inline\">\n      {label}\n    </FormLabel>\n    <Input\n      sx={styles}\n      mb=\"16px\"\n      focusBorderColor=\"purple\"\n      defaultValue={value}\n      type={type}\n      name={name}\n      id={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  </Container>\n);\n\nexport default FormInput;\n","export const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectCurrentContact = state => state.contacts.currentContact;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  if (contacts === undefined || filter === undefined) {\n    return [];\n  }\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Form from 'components/Form';\nimport FormInput from 'components/FormInput';\nimport { Container } from '@chakra-ui/react';\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newName = form.elements.name.value;\n    const newPhone = form.elements.phone.value;\n\n    if (\n      contacts.find(({ name }) => name.toLowerCase() === newName.toLowerCase())\n    ) {\n      toast.info(`${newName} is already in contacts`);\n      form.reset();\n    }\n\n    dispatch(addContact({ name: newName, number: newPhone }))\n      .unwrap()\n      .then(() => toast.success(`${newName} successfully added!`))\n      .catch(() =>\n        toast.error(`Something went wrong, ${newName} not added. Try again.`)\n      );\n\n    form.reset();\n  };\n\n  return (\n    <Container\n      border=\"1px solid\"\n      borderColor=\"purple\"\n      borderRadius=\"8px\"\n      mt=\"30px\"\n      pt=\"20px\"\n    >\n      <Form handleSubmit={handleSubmit} buttonText=\"Add contact\">\n        <FormInput\n          styles={{ display: 'inline', maxWidth: '320px' }}\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[\\\\sa-zA-Z'-]*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n\n        <FormInput\n          styles={{ display: 'inline', maxWidth: '320px' }}\n          type=\"tel\"\n          name=\"phone\"\n          label=\"Phone\"\n          pattern=\"[\\+]\\d{2}\\s[\\(]\\d{3}[\\)]\\s\\d{3}[\\-]\\d{2}[\\-]\\d{2}\"\n          title=\"Format: +38 (xxx) xxx-xx-xx\"\n        />\n      </Form>\n    </Container>\n  );\n}\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { IconButton, ListItem } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentContact } from 'redux/contacts/slice';\n\nconst ContactListItem = ({ id, name, number, handleDeleteButton, onOpen }) => {\n  const dispatch = useDispatch();\n\n  const handleItemClick = () => {\n    onOpen();\n    dispatch(setCurrentContact({ id, name, number }));\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteButton(id, name);\n  };\n\n  return (\n    <ListItem mb=\"12px\">\n      {name}: {number}\n      <IconButton\n        onClick={handleItemClick}\n        aria-label=\"Edit current contact\"\n        icon={<EditIcon />}\n        size=\"sm\"\n        variant=\"outline\"\n        ml=\"16px\"\n      />\n      <IconButton\n        onClick={handleDeleteClick}\n        aria-label=\"Delete current contact\"\n        icon={<DeleteIcon />}\n        size=\"sm\"\n        variant=\"outline\"\n        ml=\"16px\"\n      />\n    </ListItem>\n  );\n};\n\nexport default ContactListItem;\n","import { Flex, Spinner } from '@chakra-ui/react';\n\nconst Loader = () => (\n  <Flex justify=\"center\" alignItems=\"center\" pt=\"24px\">\n    <Spinner\n      thickness=\"4px\"\n      speed=\"0.65s\"\n      emptyColor=\"gray.200\"\n      color=\"blue.500\"\n      size=\"xl\"\n    />\n  </Flex>\n);\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport ContactListItem from 'components/ContactListItem';\nimport { Container, List, Text } from '@chakra-ui/react';\nimport Loader from './Loader';\n\nexport function ContactList({ onOpen }) {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteButton = async (id, name) => {\n    try {\n      await dispatch(deleteContact(id)).unwrap();\n      toast.success(`${name} successfully deleted!`);\n    } catch (error) {\n      toast.error(`Something went wrong, ${name} not deleted. Try again`);\n    }\n  };\n\n  const renderContacts = () => {\n    if (isLoading) {\n      return <Loader />;\n    } else if (error) {\n      return <Text>{error}</Text>;\n    } else if (!isLoading && !error && contacts.length === 0) {\n      return <Text>You don't have contacts yet</Text>;\n    } else {\n      let contactsToDisplay =\n        filteredContacts.length > 0 ? filteredContacts : contacts;\n\n      return (\n        <List>\n          {contactsToDisplay.map(({ id, name, number }) => (\n            <ContactListItem\n              key={id}\n              handleDeleteButton={handleDeleteButton}\n              id={id}\n              name={name}\n              number={number}\n              onOpen={onOpen}\n            />\n          ))}\n        </List>\n      );\n    }\n  };\n\n  return <Container mt=\"16px\">{renderContacts()}</Container>;\n}\n","import { FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/slice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <>\n      <FormLabel htmlFor=\"filter\" display=\"inline\" w=\"210px\">\n        Find contacts by name:\n      </FormLabel>\n      <Input\n        display=\"inline\"\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        onChange={handleChange}\n        focusBorderColor=\"purple\"\n      />\n    </>\n  );\n}\n","import {\n  Button,\n  FormControl,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react';\nimport FormInput from './FormInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentContact } from 'redux/contacts/selectors';\nimport { editContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nconst inputStyles = {\n  display: 'inline',\n  maxWidth: '400px',\n};\n\nconst ContactModal = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n  const { id, name, number } = useSelector(selectCurrentContact);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const newName = form.elements.name.value;\n    const newNumber = form.elements.phone.value;\n\n    if (name !== newName || number !== newNumber) {\n      const contact = {\n        id,\n        name: newName,\n        number: newNumber,\n      };\n      dispatch(editContact(contact))\n        .unwrap()\n        .then(() => toast.success(`${newName} successfully edited!`))\n        .catch(() =>\n          toast.error(`Something went wrong, ${newName} not edited. Try again.`)\n        );\n\n      onClose();\n    } else {\n      toast.info('Any changes edited.');\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Edit contact</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <FormControl\n            as=\"form\"\n            onSubmit={handleSubmit}\n            textAlign=\"center\"\n            mb=\"16px\"\n          >\n            <FormInput\n              styles={inputStyles}\n              type=\"text\"\n              name=\"name\"\n              label=\"Name\"\n              value={name}\n              pattern=\"^[\\\\sa-zA-Z'-]*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n\n            <FormInput\n              styles={inputStyles}\n              type=\"tel\"\n              name=\"phone\"\n              label=\"Phone\"\n              value={number}\n              pattern=\"[\\+]\\d{2}\\s[\\(]\\d{3}[\\)]\\s\\d{3}[\\-]\\d{2}[\\-]\\d{2}\"\n              title=\"Format: +38 (xxx) xxx-xx-xx\"\n            />\n            <Button onClick={onClose} variant=\"ghost\" mr={3}>\n              Go back\n            </Button>\n            <Button type=\"submit\" colorScheme=\"purple\">\n              Save changes\n            </Button>\n          </FormControl>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ContactModal;\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { Heading, useDisclosure } from '@chakra-ui/react';\nimport ContactModal from 'components/ContactModal';\n\nconst Contacts = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const { onOpen, isOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <ContactModal isOpen={isOpen} onClose={onClose} />\n      <ContactForm />\n      <Heading as=\"h3\" mt=\"30px\" mb=\"30px\">\n        Contacts ({filteredContacts.length})\n      </Heading>\n      <Filter />\n      <ContactList onOpen={onOpen} />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["children","handleSubmit","buttonText","as","onSubmit","textAlign","mb","type","mt","name","label","pattern","title","value","styles","htmlFor","sx","display","I","focusBorderColor","defaultValue","id","required","selectIsLoading","state","contacts","isLoading","selectError","error","selectContacts","items","selectCurrentContact","currentContact","selectFilteredContacts","filter","selectFilter","undefined","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","border","borderColor","borderRadius","pt","Form","e","preventDefault","form","currentTarget","newName","elements","newPhone","phone","find","toast","info","reset","addContact","number","unwrap","then","success","catch","FormInput","maxWidth","handleDeleteButton","onOpen","onClick","setCurrentContact","icon","size","variant","ml","justify","alignItems","thickness","speed","emptyColor","color","ContactList","filteredContacts","useEffect","fetchContacts","deleteContact","length","contactsToDisplay","map","renderContacts","Filter","w","onChange","target","filterContacts","inputStyles","isOpen","onClose","event","newNumber","contact","editContact","mr","colorScheme","useDisclosure"],"sourceRoot":""}